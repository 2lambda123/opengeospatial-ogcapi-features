{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/logicalExpression",

    "definitions": {

      "predicates": {
        "type": "object",
        "allOf": [
            { "$ref": "#/definitions/logicalExpression" },
            { "$ref": "#/definitions/comparisonExpressions" },
            { "$ref": "#/definitions/spatialExpressions" },
            { "$ref": "#/definitions/temporalExpressions" }
        ]
      },

      "logicalExpression" : {
        "type": "object",
        "properties": {
            "and": {"$ref": "#/definitions/and" },
            "or": {"$ref": "#/definitions/or" },
            "not": {"$ref": "#/definitions/not" }
        },
        "minProperties": 1,
        "maxProperties": 1
      },

      "comparisonExpressions" : {
        "type": "object",
        "properties": {
            "eq": {"$ref": "#/definitions/eq"},
            "lt": {"$ref": "#/definitions/lt"},
            "gt": {"$ref": "#/definitions/gt"},
            "lte": {"$ref": "#/definitions/lte"},
            "gte": {"$ref": "#/definitions/gte"},

            "between": {"$ref": "#/definitions/between"},

            "like": { "$ref": "#/definitions/like" },
            "in": { "$ref": "#/definitions/in" }
        },
        "minProperties": 1,
        "maxProperties": 1
      },

      "spatialExpressions" : {
        "type": "object",
        "properties": {
            "equals": {"$ref": "#/definitions/equals"},
            "disjoint": {"$ref": "#/definitions/disjoint"},
            "touches": {"$ref": "#/definitions/touches"},
            "within": {"$ref": "#/definitions/within"},
            "overlaps": {"$ref": "#/definitions/overlaps"},
            "crosses": {"$ref": "#/definitions/crosses"},
            "intersects": {"$ref": "#/definitions/intersects"},
            "contains": {"$ref": "#/definitions/contains"}
        },
        "minProperties": 1,
        "maxProperties": 1
      },

      "temporalExpressions" : {
        "type": "object",
        "properties": {
            "after": {"$ref": "#/definitions/after"},
            "before": {"$ref": "#/definitions/before"},
            "begins": {"$ref": "#/definitions/begins"},
            "begunby": {"$ref": "#/definitions/begunby"},
            "tcontains": {"$ref": "#/definitions/tcontains"},
            "during": {"$ref": "#/definitions/during"},
            "endedby": {"$ref": "#/definitions/endedby"},
            "ends": {"$ref": "#/definitions/ends"},
            "tequals": {"$ref": "#/definitions/tequals"},
            "meets": {"$ref": "#/definitions/meets"},
            "metby": {"$ref": "#/definitions/metby"},
            "toverlaps": {"$ref": "#/definitions/toverlaps"},
            "overlappedby": {"$ref": "#/definitions/overlappedby"}
        },
        "minProperties": 1,
        "maxProperties": 1
      },

      "and": { "$ref": "#/definitions/booleanOperands" },
      "or":  { "$ref": "#/definitions/booleanOperands" },
      "not": { "$ref": "#/definitions/logicalExpression" },

      "add": { "$ref": "#/definitions/arithmeticOperands" },
      "sub": { "$ref": "#/definitions/arithmeticOperands" },
      "mul": { "$ref": "#/definitions/arithmeticOperands" },
      "div": { "$ref": "#/definitions/arithmeticOperands" },

      "eq":  { "$ref": "#/definitions/scalarOperands" },
      "lt":  { "$ref": "#/definitions/scalarOperands" },
      "gt":  { "$ref": "#/definitions/scalarOperands" },
      "lte": { "$ref": "#/definitions/scalarOperands" },
      "gte": { "$ref": "#/definitions/scalarOperands" },

      "between": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "lower": { "$ref": "#/definitions/scalarLiteral" },
            "upper": { "$ref": "#/definitions/scalarLiteral" }
         },
         "required" : [ "property", "lower", "upper" ]
      },

      "like": {
         "type": "object",
         "properties": {
            "wildcard": { "type": "string", "default": "%" },
            "singleChar": { "type": "string", "default": "_" },
            "escape": { "type": "string", "default": "\\" },
            "nocase": { "type": "boolean", "default": true },
            "property": { "type": "string" },
            "value": { "$ref": "#/definitions/scalarLiteral" }
         }
      },

      "in": {
         "type": "object",
         "properties": {
            "nocase": { "type": "boolean", "default": true },
            "property": { "type": "string" },
            "values": {
               "type": "array",
               "items": { "$ref": "#/definitions/scalarLiteral" }
            }
         }
      },

      "equals":     { "$ref": "#/definitions/spatialOperands" },
      "disjoint":   { "$ref": "#/definitions/spatialOperands" },
      "touches":    { "$ref": "#/definitions/spatialOperands" },
      "within":     { "$ref": "#/definitions/spatialOperands" },
      "overlaps":   { "$ref": "#/definitions/spatialOperands" },
      "crosses":    { "$ref": "#/definitions/spatialOperands" },
      "intersects": { "$ref": "#/definitions/spatialOperands" },
      "contains":   { "$ref": "#/definitions/spatialOperands" },

      "after":        { "$ref": "#/definitions/temporalOperands" },
      "before":       { "$ref": "#/definitions/temporalOperands" },
      "begins":       { "$ref": "#/definitions/temporalOperands" },
      "begunby":      { "$ref": "#/definitions/temporalOperands" },
      "tcontains":    { "$ref": "#/definitions/temporalOperands" },
      "during":       { "$ref": "#/definitions/temporalOperands" },
      "endedby":      { "$ref": "#/definitions/temporalOperands" },
      "ends":         { "$ref": "#/definitions/temporalOperands" },
      "tequals":      { "$ref": "#/definitions/temporalOperands" },
      "meets":        { "$ref": "#/definitions/temporalOperands" },
      "metby":        { "$ref": "#/definitions/temporalOperands" },
      "toverlaps":    { "$ref": "#/definitions/temporalOperands" },
      "overlappedby": { "$ref": "#/definitions/temporalOperands" },
      "anyinteracts": { "$ref": "#/definitions/temporalOperands" },
      "tintersects":  { "$ref": "#/definitions/temporalOperands" },

      "booleanOperands": {
         "type": "array",
         "items": {
             "$ref": "#/definitions/logicalExpression",
             "minItems": 2
         }
      },
     
      "arithmeticOperands": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "function": { "$ref": "#/definitions/function" },
            "value": { "type": "number" },
            "+": {"$ref": "#/definitions/add"},
            "-": {"$ref": "#/definitions/sub"},
            "*": {"$ref": "#/definitions/mul"},
            "/": {"$ref": "#/definitions/div"}
         },
         "minProperties": 2,
         "maxProperties": 2
      },

      "scalarOperands": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "function": { "$ref": "#/definitions/function" },
            "value": { "$ref": "#/definitions/scalarLiteral" },
            "+": {"$ref": "#/definitions/add"},
            "-": {"$ref": "#/definitions/sub"},
            "*": {"$ref": "#/definitions/mul"},
            "/": {"$ref": "#/definitions/div"}
         },
         "minProperties": 2,
         "maxProperties": 2
      },

      "spatialOperands": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "function": { "$ref": "#/definitions/function" },
            "value": {  "$ref": "#/definitions/geometryLiteral" }
         },
         "minProperties": 2,
         "maxProperties": 2
      },

      "temporalOperands": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "function": { "$ref": "#/definitions/function" },
            "value": { "$ref": "#/definitions/temporalLiteral" }
         },
         "minProperties": 2,
         "maxProperties": 2
      },

      "function": {
         "type": "object",
         "properties": {
            "name": { "type": "string" },
            "arguments": {
               "type": "array",
               "items": {
                  "oneOf": [
                     { "type": "string" },
                     { "type": "number" },
                     { "type": "boolean" },
                     { "$ref": "#/definitions/functionObjectArgument" }
                  ]
               }
            }
         }
      },

      "functionObjectArgument": {
         "type": "object",
         "properties": {
            "property": { "type": "string" },
            "function": { "$ref": "#/definitions/function" },
            "geometry": { "$ref": "#/definitions/geometryLiteral" },
            "bbox": { "$ref": "#/definitions/bbox" },
            "temporalValue": { "$ref": "#/definitions/temporalLiteral" },
            "+": {"$ref": "#/definitions/add"},
            "-": {"$ref": "#/definitions/sub"},
            "*": {"$ref": "#/definitions/mul"},
            "/": {"$ref": "#/definitions/div"}
         }
      },

      "scalarLiteral": {
         "oneOf": [
            { "type": "string" },
            { "type": "number" },
            { "type": "boolean"}
         ]
      },

      "geometryLiteral": {
         "type": "object"
      },

      "bbox": {
        "type": "array",
        "items": {
            "type": "number",
            "minItems": 4,
            "maxItems": 6
        }
      },

      "envelopeLiteral": {
         "type": "object",
         "properties": {
            "bbox": { "$ref": "#/definitions/bbox" }
         }
      },

      "temporalLiteral": {
         "oneOf": [
            { "$ref": "#/definitions/timeLiteral" },
            { "$ref": "#/definitions/periodLiteral" }
         ]
      },

      "timeLiteral": {
         "type": "string",
         "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-9][0-9](T[0-2][0-9]:[0-5][0-9]:[0-5][0-9](.[0-9]*)?)?"
      },

      "periodLiteral": {
         "type": "array",
         "items": {
            "$ref": "#/definitions/timeLiteral",
            "minItems": 2,
            "maxItems": 2
        }
     }
   }
}

