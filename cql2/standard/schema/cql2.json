{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$dynamicAnchor": "cql2expression",
  "type": "object",
  "oneOf": [
    {
      "$ref": "#/$defs/logicalExpression"
    },
    {
      "$ref": "#/$defs/notExpression"
    },
    {
      "$ref": "#/$defs/comparisonPredicate"
    },
    {
      "$ref": "#/$defs/spatialPredicate"
    },
    {
      "$ref": "#/$defs/temporalPredicate"
    },
    {
      "$ref": "#/$defs/arrayPredicate"
    }
  ],
  "$defs": {

    "logicalExpression": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "and", "or" ]
        },
        "args": {
          "type": "array",
          "minItems": 2,
          "items": {
            "$dynamicRef": "#cql2expression"
          }
        }
      }
    },

    "notExpression": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "not" ]
        },
        "args": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "$dynamicRef": "#cql2expression"
          }
        }
      }
    },

    "comparisonPredicate": {
      "oneOf": [
        {
          "$ref": "#/$defs/binaryComparisonPredicate"
        },
        {
          "$ref": "#/$defs/isLikePredicate"
        },
        {
          "$ref": "#/$defs/isBetweenPredicate"
        },
        {
          "$ref": "#/$defs/isInListPredicate"
        },
        {
          "$ref": "#/$defs/isNullPredicate"
        }
      ]
    },

    "binaryComparisonPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "=", "<>", "<", ">", "<=", ">=" ]
        },
        "args": {
          "$ref": "#/$defs/scalarOperands"
        }
      }
    },
    "scalarOperands": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "$ref": "#/$defs/scalarExpression"
      }
    },
    "scalarExpression": {
      "oneOf": [
        {
          "$ref": "#/$defs/scalarLiteral"
        },
        {
          "$ref": "#/$defs/propertyRef"
        },
        {
          "$ref": "#/$defs/functionRef"
        },
        {
          "$ref": "#/$defs/arithmeticExpression"
        }
      ]
    },

    "isLikePredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "like" ]
        },
        "args": {
          "$ref": "#/$defs/isLikeOperands"
        }
      }
    },
    "isLikeOperands": {
          "type": "array",
          "prefixItems": [
            {
              "$ref": "#/$defs/characterExpression"
            },
            {
              "type": "string"
            }
          ],
          "additionalItems": false
    },
    "characterExpression": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/$defs/propertyRef"
        },
        {
          "$ref": "#/$defs/functionRef"
        }
      ]
    },

    "isBetweenPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "between" ]
        },
        "args": {
          "$ref": "#/$defs/isBetweenOperands"
        }
      }
    },
    "isBetweenOperands": {
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "$ref": "#/$defs/numericExpression"
      },
      "additionalItems": false
    },
    "numericExpression": {
      "oneOf": [
        {
          "type": "number"
        },
        {
          "$ref": "#/$defs/propertyRef"
        },
        {
          "$ref": "#/$defs/functionRef"
        },
        {
          "$ref": "#/$defs/arithmeticExpression"
        }
      ]
    },

    "isInListPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "in" ]
        },
        "args": {
          "$ref": "#/$defs/inListOperands"
        }
      }
    },
    "inListOperands": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/scalarExpression"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/$defs/scalarExpression"
            }
          }
        ]
      },
      "additionalItems": false
    },

    "isNullPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "isNull" ]
        },
        "args": {
          "$ref": "#/$defs/scalarExpression"
        }
      }
    },

    "spatialPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [
            "s_contains",
            "s_crosses",
            "s_disjoint",
            "s_equals",
            "s_intersects",
            "s_overlaps",
            "s_touches",
            "s_within"
          ]
        },
        "args": {
          "$ref": "#/$defs/spatialOperands"
        }
      }
    },
    "spatialOperands": {
      "type": "array",
      "prefixItems": [
        {
          "$ref": "#/$defs/geomExpression"
        },
        {
          "$ref": "#/$defs/geomExpression"
        }
      ],
      "additionalItems": false
    },
    "geomExpression": {
      "oneOf": [
        {
          "$ref": "#/$defs/spatialLiteral"
        },
        {
          "$ref": "#/$defs/propertyRef"
        },
        {
          "$ref": "#/$defs/functionRef"
        }
      ]
    },

    "temporalPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [
            "t_after",
            "t_before",
            "t_contains",
            "t_disjoint",
            "t_during",
            "t_equals",
            "t_finishedBy",
            "t_finishes",
            "t_intersects",
            "t_meets",
            "t_metBy",
            "t_overlappedBy",
            "t_overlaps",
            "t_startedBy",
            "t_starts"
          ]
        },
        "args": {
          "$ref": "#/$defs/temporalOperands"
        }
      }
    },
    "temporalOperands": {
      "type": "array",
      "prefixItems": [
        {
          "$ref": "#/$defs/temporalExpression"
        },
        {
          "$ref": "#/$defs/temporalExpression"
        }
      ],
      "additionalItems": false
    },
    "temporalExpression": {
      "oneOf": [
        {
          "$ref": "#/$defs/temporalLiteral"
        },
        {
          "$ref": "#/$defs/propertyRef"
        },
        {
          "$ref": "#/$defs/functionRef"
        }
      ]
    },

    "arrayPredicate": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [
            "a_containedBy",
            "a_contains",
            "a_equals",
            "a_overlaps"
          ]
        },
        "args": {
          "$ref": "#/$defs/arrayExpression"
        }
      }
    },
    "arrayExpression": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/propertyRef"
          },
          {
            "$ref": "#/$defs/functionRef"
          },
          {
            "$ref": "#/$defs/arrayLiteral"
          }
        ]
      }
    },
    "arrayLiteral": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/scalarLiteral"
          },
          {
            "$ref": "#/$defs/spatialLiteral"
          },
          {
            "$ref": "#/$defs/intervalLiteral"
          },
          {
            "$ref": "#/$defs/propertyRef"
          },
          {
            "$ref": "#/$defs/functionRef"
          },
          {
            "$ref": "#/$defs/arithmeticExpression"
          },
          {
            "$ref": "#/$defs/arrayLiteral"
          }
        ]
      }
    },

    "arithmeticExpression": {
      "type": "object",
      "required": [ "op", "args" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [ "+", "-", "*", "/" ]
        },
        "args": {
          "$ref": "#/$defs/arithmeticOperands"
        }
      }
    },
    "arithmeticOperands": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/arithmeticExpression"
          },
          {
            "$ref": "#/$defs/propertyRef"
          },
          {
            "$ref": "#/$defs/functionRef"
          },
          {
            "type": "number"
          }
        ]
      }
    },

    "propertyRef": {
      "oneOf": [
        {
          "type": "object",
          "required": [ "property" ],
          "properties": {
            "property": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [ "upper" ],
          "properties": {
            "upper": {
              "$ref": "#/$defs/propertyRef"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [ "lower" ],
          "properties": {
            "lower": {
              "$ref": "#/$defs/propertyRef"
            }
          },
          "additionalProperties": false
        }
      ]
    },

    "functionRef": {
      "oneOf": [
        {
          "type": "object",
          "required": [ "function" ],
          "properties": {
            "function": {
              "$ref": "#/$defs/function"
            }
          }
        },
        {
          "type": "object",
          "required": [ "upper" ],
          "properties": {
            "upper": {
              "$ref": "#/$defs/functionRef"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [ "lower" ],
          "properties": {
            "lower": {
              "$ref": "#/$defs/functionRef"
            }
          },
          "additionalProperties": false
        }
      ]
    },

    "function": {
      "type": "object",
      "required": [ "name" ],
      "properties": {
        "name": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/$defs/scalarLiteral"
              },
              {
                "$ref": "#/$defs/spatialLiteral"
              },
              {
                "$ref": "#/$defs/intervalLiteral"
              },
              {
                "$ref": "#/$defs/propertyRef"
              },
              {
                "$ref": "#/$defs/functionRef"
              },
              {
                "$ref": "#/$defs/arithmeticExpression"
              },
              {
                "$ref": "#/$defs/arrayLiteral"
              }
            ]
          }
        }
      }
    },

    "scalarLiteral": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        },
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/instantLiteral"
        },
        {
          "type": "object",
          "required": [ "upper" ],
          "properties": {
            "upper": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [ "lower" ],
          "properties": {
            "lower": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },

    "spatialLiteral": {
      "oneOf": [
        {
          "$ref": "#/$defs/geometryLiteral"
        },
        {
          "$ref": "#/$defs/envelopeLiteral"
        }
      ]
    },
    "geometryLiteral": {
      "oneOf": [
        {
          "$ref": "#/$defs/point"
        },
        {
          "$ref": "#/$defs/linestring"
        },
        {
          "$ref": "#/$defs/polygon"
        },
        {
          "$ref": "#/$defs/multipoint"
        },
        {
          "$ref": "#/$defs/multilinestring"
        },
        {
          "$ref": "#/$defs/multipolygon"
        }
      ]
    },
    "point": {
      "title": "GeoJSON Point",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "Point" ]
        },
        "coordinates": {
          "type": "array",
          "minItems": 2,
          "items": {
            "type": "number"
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "linestring": {
      "title": "GeoJSON LineString",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "LineString" ]
        },
        "coordinates": {
          "type": "array",
          "minItems": 2,
          "items": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "number"
            }
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "polygon": {
      "title": "GeoJSON Polygon",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "Polygon" ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "array",
            "minItems": 4,
            "items": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            }
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "multipoint": {
      "title": "GeoJSON MultiPoint",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "MultiPoint" ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "number"
            }
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "multilinestring": {
      "title": "GeoJSON MultiLineString",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "MultiLineString" ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            }
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "multipolygon": {
      "title": "GeoJSON MultiPolygon",
      "type": "object",
      "required": [ "type", "coordinates" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "MultiPolygon" ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "bbox": {
          "type": "array",
          "minItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "envelopeLiteral": {
      "type": "object",
      "required": [
        "bbox"
      ],
      "properties": {
        "bbox": {
          "$ref": "#/$defs/bbox"
        }
      }
    },
    "bbox": {
      "type": "array",
      "oneOf": [
        {
          "minItems": 4,
          "maxItems": 4
        },
        {
          "minItems": 6,
          "maxItems": 6
        }
      ],
      "items": {
        "type": "number"
      }
    },

    "temporalLiteral": {
      "oneOf": [
        {
          "$ref": "#/$defs/instantLiteral"
        },
        {
          "$ref": "#/$defs/intervalLiteral"
        }
      ]
    },
    "instantLiteral": {
      "oneOf": [
        {
          "$ref": "#/$defs/dateLiteral"
        },
        {
          "$ref": "#/$defs/timestampLiteral"
        }
      ]
    },
    "dateLiteral": {
      "type": "object",
      "required": [ "date" ],
      "properties": {
        "date": {
          "$ref": "#/$defs/dateString"
        }
      }
    },
    "timestampLiteral": {
      "type": "object",
      "required": [ "timestamp" ],
      "properties": {
        "timestamp": {
          "$ref": "#/$defs/timestampString"
        }
      }
    },
    "instantString": {
      "oneOf": [
        {
          "$ref": "#/$defs/dateString"
        },
        {
          "$ref": "#/$defs/timestampString"
        }
      ]
    },
    "dateString": {
      "type": "string",
      "format": "date"
    },
    "timestampString": {
      "type": "string",
      "format": "date-time"
    },
    "intervalLiteral": {
      "type": "object",
      "required": [
        "interval"
      ],
      "properties": {
        "interval": {
          "$ref": "#/$defs/intervalArray"
        }
      }
    },
    "intervalArray": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/instantString"
          },
          {
            "type": "string",
            "enum": [
              ".."
            ]
          },
          {
            "$ref": "#/$defs/propertyRef"
          },
          {
            "$ref": "#/$defs/functionRef"
          }
        ]
      }
    }
  }
}
